{"version":3,"sources":["components/Form.js","components/Weather.js","App.js","index.js"],"names":["Form","props","handleChange","e","target","value","id","onSubmit","getWeather","type","name","placeholder","onChange","Weather","className","tempetature","city","country","humidity","description","error","API_KEY","App","state","a","preventDefault","elements","fetch","api","json","data","setState","main","temp","sys","weather","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAoBeA,EAlBF,SAACC,GAEV,IAAMC,EAAe,SAACC,GAAO,IAAD,cACRA,EAAEC,OAAOC,MADD,GACvBF,EAAEC,OAAOE,GADc,MAI5B,OACI,8BACI,uBAAMC,SAAUN,EAAMO,WAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOJ,GAAG,OAAOK,YAAY,UAAUC,SAAUV,IACzE,uBAAOO,KAAK,OAAOC,KAAK,UAAUJ,GAAG,UAAUK,YAAY,aAAaC,SAAUV,IAClF,uDCgCDW,EA3CC,SAACZ,GACT,OACI,sBAAKa,UAAU,OAAf,UAEQb,EAAMc,aACN,oBAAGD,UAAU,WAAb,yBACI,uBAAMA,UAAU,aAAhB,cAA+Bb,EAAMc,YAArC,UAIJd,EAAMe,MACN,oBAAGF,UAAU,WAAb,kBACI,uBAAMA,UAAU,aAAhB,cAA+Bb,EAAMe,KAArC,UAIJf,EAAMgB,SACN,oBAAGH,UAAU,WAAb,qBACI,uBAAMA,UAAU,aAAhB,cAA+Bb,EAAMgB,QAArC,UAIJhB,EAAMiB,UACN,oBAAGJ,UAAU,WAAb,sBACI,uBAAMA,UAAU,aAAhB,cAA+Bb,EAAMiB,SAArC,UAIJjB,EAAMkB,aACN,oBAAGL,UAAU,WAAb,yBACI,uBAAMA,UAAU,aAAhB,cAA+Bb,EAAMkB,YAArC,UAIJlB,EAAMmB,OACN,oBAAGN,UAAU,WAAb,mBACI,uBAAMA,UAAU,aAAhB,cAA+Bb,EAAMmB,MAArC,cCjClBC,EAAU,mCACVC,E,4MACJC,MAAQ,CACNR,YAAa,GACbC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,MAAO,I,EAETZ,W,uCAAa,WAAOL,GAAP,qBAAAqB,EAAA,6DACXrB,EAAEsB,iBACIT,EAAOb,EAAEC,OAAOsB,SAASV,KAAKX,MAC9BY,EAAUd,EAAEC,OAAOsB,SAAST,QAAQZ,MAH/B,SAIOsB,MAAM,oDAAD,OAAqDX,EAArD,cAA+DC,EAA/D,kBAAgFI,IAJ5F,cAILO,EAJK,gBAKQA,EAAIC,OALZ,OAKLC,EALK,OAMRd,GAAQC,EACT,EAAKc,SAAS,CACZhB,YAAae,EAAKE,KAAKC,KACvBjB,KAAMc,EAAKpB,KACXO,QAASa,EAAKI,IAAIjB,QAClBC,SAAUY,EAAKE,KAAKd,SACpBC,YAAaW,EAAKK,QAAQ,GAAGhB,YAC7BC,MAAO,KAGT,EAAKW,SAAS,CACZhB,YAAa,GACbC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,MAAO,sBAtBA,4C,kGA0Bb,WACE,OACE,qBAAKN,UAAU,UAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAMN,WAAY4B,KAAK5B,aACvB,cAAC,EAAD,CACEO,YAAaqB,KAAKb,MAAMR,YACxBC,KAAMoB,KAAKb,MAAMP,KACjBC,QAASmB,KAAKb,MAAMN,QACpBC,SAAUkB,KAAKb,MAAML,SACrBC,YAAaiB,KAAKb,MAAMJ,YACxBC,MAAOgB,KAAKb,MAAMH,iB,GA9CZiB,aAsDHf,ICvDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eb401abd.chunk.js","sourcesContent":["import React  from 'react'\r\n\r\nconst Form = (props) => {\r\n\r\n    const handleChange = (e) => {\r\n        [e.target.id] = e.target.value; \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.getWeather}>\r\n                <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City...\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"country\" id=\"country\" placeholder=\"Country...\" onChange={handleChange} />\r\n                <button>Get Weather</button>\r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nconst Weather = (props) => {\r\n        return (\r\n            <div className=\"info\">\r\n                {\r\n                    props.tempetature &&\r\n                    <p className=\"info_key\">Tempetature:\r\n                        <span className=\"info_value\"> {props.tempetature} </span>\r\n                    </p>\r\n                }\r\n                {\r\n                    props.city &&\r\n                    <p className=\"info_key\">City:\r\n                        <span className=\"info_value\"> {props.city} </span>\r\n                    </p>\r\n                }\r\n                {\r\n                    props.country &&\r\n                    <p className=\"info_key\">Country:\r\n                        <span className=\"info_value\"> {props.country} </span>\r\n                    </p>\r\n                }\r\n                {\r\n                    props.humidity &&\r\n                    <p className=\"info_key\">Humidity:\r\n                        <span className=\"info_value\"> {props.humidity} </span>\r\n                    </p>\r\n                }\r\n                {\r\n                    props.description &&\r\n                    <p className=\"info_key\">Description:\r\n                        <span className=\"info_value\"> {props.description} </span>\r\n                    </p>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <p className=\"info_key\">Error:\r\n                        <span className=\"info_value\"> {props.error} </span>\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Weather;\r\n","import React , {Component} from 'react';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n// http://api.openweathermap.org/data/2.5/weather?q=cairo%2Cegypt&appid=e36ed364400282e43250b6c4c0274d44\n\nconst API_KEY = \"80d764af8822910f0798bb2dd16290fa\";\nclass App extends Component {\n  state = {\n    tempetature: '',\n    city: '',\n    country: '',\n    humidity: '',\n    description: '',\n    error: ''\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${API_KEY}`)\n    const data = await api.json();\n    if(city && country) {\n      this.setState({\n        tempetature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: ''\n      })\n    } else {\n      this.setState({\n        tempetature: '',\n        city: '',\n        country: '',\n        humidity: '',\n        description: '',\n        error: 'Please Enter Data'\n      })\n    }\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-container\">\n          <Form getWeather={this.getWeather} />\n          <Weather\n            tempetature={this.state.tempetature}\n            city={this.state.city}\n            country={this.state.country}\n            humidity={this.state.humidity}\n            description={this.state.description}\n            error={this.state.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}